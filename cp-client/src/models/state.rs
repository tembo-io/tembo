/*
 * Tembo Cloud
 *
 * Platform API for Tembo Cloud             </br>             </br>             To find a Tembo Data API, please find it here:             </br>             </br>             [AWS US East 1](https://api.data-1.use1.tembo.io/swagger-ui/)             
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "Submitted")]
    Submitted,
    #[serde(rename = "Up")]
    Up,
    #[serde(rename = "Configuring")]
    Configuring,
    #[serde(rename = "Error")]
    Error,
    #[serde(rename = "Restarting")]
    Restarting,
    #[serde(rename = "Starting")]
    Starting,
    #[serde(rename = "Stopping")]
    Stopping,
    #[serde(rename = "Stopped")]
    Stopped,
    #[serde(rename = "Deleting")]
    Deleting,
    #[serde(rename = "Deleted")]
    Deleted,

}

impl std::fmt::Display for State {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Submitted => write!(f, "Submitted"),
            Self::Up => write!(f, "Up"),
            Self::Configuring => write!(f, "Configuring"),
            Self::Error => write!(f, "Error"),
            Self::Restarting => write!(f, "Restarting"),
            Self::Starting => write!(f, "Starting"),
            Self::Stopping => write!(f, "Stopping"),
            Self::Stopped => write!(f, "Stopped"),
            Self::Deleting => write!(f, "Deleting"),
            Self::Deleted => write!(f, "Deleted"),
        }
    }
}

impl Default for State {
    fn default() -> State {
        Self::Submitted
    }
}

