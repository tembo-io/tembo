inferenceGateway:
  image:
    repository: quay.io/tembo/inference-gateway
    pullPolicy: IfNotPresent
    tag: latest
  resources:
    requests:
      cpu: 100m
      memory: 410Mi
    limits:
      cpu: 1000m
      memory: 512Mi
  livenessProbe:
    enabled: true
    path: /lively
    port: http
  readinessProbe:
    enabled: true
    path: /ready
    port: http
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    # Target CPU is a percentage of requests, i.e. the measurement can
    # exceed 100% when limits is greater than requests.
    targetCPUUtilizationPercentage: 99
  externalSecrets:
    refreshInterval: "5m"
    parameterStore:
      name: "secret-store-parameter-store"
      kind: ClusterSecretStore
    secretName: ~
    secretRegex: ~
  podMonitor:
    enabled: false
    path: /metrics
    # Sometimes applications serve metrics on a different port,
    # which makes it easier to prevent metrics from accidentally
    # being publicly available.
    portName: metrics
    containerPort: 8081
  ingressRoute:
    enabled: false
    # match: "Host(`example.com`)"
    match: ~
  serviceAccount:
    create: true
    annotations: {}
  service:
    port: 8080
  args: []
  command:
    - "/usr/local/bin/gateway"
  env: []
  securityContext: {}
  #  # The most practical security settings are
  #  # dropping all linux capabilities and
  #  # running as non-root.
  #  capabilities:
  #    drop:
  #    - ALL
  #  runAsNonRoot: true
  #  # Read only file system is better if the application
  #  # can tolerate it.
  #  # readOnlyRootFilesystem: true
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}

inferenceService:
  image:
    repository: vllm/vllm-openai
    pullPolicy: IfNotPresent
    tag: latest
  resources:
    requests:
      nvidia.com/gpu: 1
      cpu: 4
      memory: 16Gi
    limits:
      cpu: 8
      memory: 16Gi
  livenessProbe:
    enabled: true
    path: /lively
    port: http
  readinessProbe:
    enabled: true
    path: /ready
    port: http
  replicaCount: 1
  externalSecrets:
    refreshInterval: "5m"
    parameterStore:
      name: "secret-store-parameter-store"
      kind: ClusterSecretStore
    secretName: ~
    secretRegex: ~
  podMonitor:
    enabled: false
    path: /metrics
    # Sometimes applications serve metrics on a different port,
    # which makes it easier to prevent metrics from accidentally
    # being publicly available.
    portName: metrics
    containerPort: 8081
  serviceAccount:
    create: true
    annotations: {}
  service:
    port: 8080
  args: []
  command: []
  env: []
  securityContext: {}
  #   # The most practical security settings are
  #   # dropping all linux capabilities and
  #   # running as non-root.
  #   capabilities:
  #     drop:
  #     - ALL
  #   runAsNonRoot: true
  #   # Read only file system is better if the application
  #   # can tolerate it.
  #   # readOnlyRootFilesystem: true
  nodeSelector: {}
  tolerations:
  - key: "tembo.io/gpu"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"
  affinity: {}
  podAnnotations: {}
  podSecurityContext: {}
  persistence:
    enabled: true
    size: 100Gi
    storageClass: ""
    accessMode: ReadWriteOnce
    mountPath: /root/.cache/
