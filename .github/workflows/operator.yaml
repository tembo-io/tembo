name: Operator workflow

permissions:
  pull-requests: write
  deployments: write
  id-token: write
  contents: read

defaults:
  run:
    shell: bash
    working-directory: ./tembo-operator/

on:
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/operator.yaml"
      - "tembo-operator/**"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/operator.yaml"
      - "tembo-operator/**"

jobs:
  functional_test:
    name: Run functional testing
    runs-on:
      - self-hosted
      - dind
      - xlarge-16x16
    strategy:
      # fail-fast means to cancel all jobs if one fails
      fail-fast: false
      matrix:
        # Go here for a list of versions:
        # https://github.com/kubernetes-sigs/kind/releases
        kube_version:
          - "1.29.8"
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          set -xe
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev git
      - uses: azure/setup-helm@v4
      - uses: extractions/setup-just@v2
      - name: Install kind
        uses: helm/kind-action@v1
        with:
          install_only: true
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "tembo-operator-functional-test"
          workspaces: |
            tembo-operator
      - name: Check CRD is updated in the charts directory
        run: |
          set -xe
          cargo run --bin crdgen > ../charts/tembo-operator/templates/crd.yaml
          git diff --exit-code ../charts/tembo-operator/templates/crd.yaml
      - name: Setup local test cluster
        run: |
          set -xe
          export KUBE_VERSION=${{ matrix.kube_version }}
          just start-kind
      - name: Run functional / integration tests
        run: |
          set -xe
          export DATA_PLANE_BASEDOMAIN=localhost
          export USE_SHARED_CA=1
          # Start the operator in the background
          cargo run > operator-output.txt 2>&1 &
          # Run the tests
          cargo test -- --ignored --nocapture
      - name: Debugging information
        if: always()
        run: |
          set +e
          set -x
          echo "=========="
          cat operator-output.txt
          echo "=========="
          # Get list of namespaces that start with 'test-coredb-'
          namespaces=$(kubectl get ns -o jsonpath='{.items[*].metadata.name}' | tr ' ' '\n' | grep '^test-coredb-')

          for ns in $namespaces; do
              echo "==== Namespace: $ns ===="
              kubectl -n $ns get pods $ns-1 -o yaml
              echo "=============================="
              kubectl -n $ns get svc -o yaml
              echo "=============================="
              kubectl -n $ns get coredb $ns -o yaml
              echo "=============================="
              kubectl -n $ns get clusters $ns -o yaml
              echo "=============================="
          done
