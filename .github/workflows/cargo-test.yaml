name: Cargo lint and test

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "tembo-py/**"
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "tembo-py/**"

jobs:
  find_directories:
    name: Find changed Cargo projects
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.find_directories.outputs.build_matrix }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Find directories with Dockerfiles that changed
        id: find_directories
        uses: ./.github/actions/find-changed-directories
        with:
          contains_the_file: Cargo.toml
          changed_relative_to_ref: origin/${{ github.base_ref || 'not-a-branch' }}
          ignore_dirs: ".coredb examples tembo-cli/tembo_api_client tembo-cli/tembodataclient inference-gateway"

  lint:
    name: Run linters
    runs-on:
      - ubuntu-latest
    needs:
      - find_directories
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.find_directories.outputs.directories) }}
    steps:
      - uses: actions/checkout@v4
      - name: Install system dependencies
        run: |
          set -xe
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev build-essential
      - name: Install Rust with clippy and rustfmt
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          cache: true
          cache-key: "tembo-cargo-test-lint"
          cache-on-failure: true
      - name: Cargo format and clippy
        run: |
          set -xe
          cd ${{ matrix.path }}
          cargo --version
          cargo fmt --all --check
          cargo clippy

  test:
    name: Run tests
    runs-on:
      - "runs-on=${{ github.run_id }}"
      - "runner=large-amd64"
      - "cpu=8"
      - "ram=16"
    needs:
      - find_directories
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.find_directories.outputs.directories) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache: true
          cache-key: "tembo-cargo-test-lint"
          cache-on-failure: true
      - name: Install system dependencies
        run: |
          set -xe
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev lsb-release wget build-essential
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/pgdg.asc &>/dev/null
          sudo apt-get update && sudo apt-get install -y postgresql-client
      - name: Unit tests
        run: |
          set -xe
          export PROMETHEUS_URL=https://prometheus-data-1.use1.dev.plat.cdb-svc.com
          cd ${{ matrix.path }} && cargo test
        env:
          ORG_ID: org_2YW4TYIMI1LeOqJTXIyvkHOHCUo
          ACCESS_TOKEN: ${{ secrets.TEMBO_TOKEN_TEST_ORG_DEV }}
          TEMBO_HOST: ${{ secrets.TEMBO_HOST }}
          TEMBO_DATA_HOST: ${{ secrets.TEMBO_DATA_HOST }}
