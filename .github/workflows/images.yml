name: Build and push images

on:
  pull_request: {}
  push:
    branches:
      - 'main'
      - 'release/**'

jobs:
  find_directories:
    name: Find directories with Dockerfiles
    runs-on: ubuntu-20.04
    outputs:
      directories: ${{ steps.find_directories.outputs.directories }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Find directories with Dockerfiles
        id: find_directories
        run: |
          # Get directories with a Dockerfile
					directories=`find . -name Dockerfile -not -path "*/target/*" -exec dirname {} \;`
          # Format into JSON for the next job
          matrix_include=$(echo "${directories}" | jq -R 'split(" +") | map(select(. != "")) | add' | jq -s '{"include": .}' | jq -cM)
          echo "matrix=${matrix_include}" >> $GITHUB_OUTPUTS

  build_and_push_images:
    name: Build and push images
    runs-on: ubuntu-20.04
    needs:
      - find_directories
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(find_directories.find_directories.outputs.directories) }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Build and upload image
        uses: ./.github/actions/build-and-push-to-quay
        with:
          image_name: ${{ matrix.name }}
          docker_directory: ${{ matrix.path }}
          # Tag with version in Cargo.toml
          # if that file is present
          # and if the branch is 'main' or starts with 'release/'
          tag_cargo_version_if_present: ${{ if or(eq(github.ref, 'refs/heads/main'), startsWith(github.ref, 'refs/heads/release/')) }}true${{ else }}false${{ end }}
          # Tag with 'latest'
          # if the branch is 'main'
          tag_latest: ${{ if eq(github.ref, 'refs/heads/main') }}true${{ else }}false${{ end }}
          quay_user: ${{ secrets.QUAY_USER }}
          quay_password: ${{ secrets.QUAY_PASSWORD }}
