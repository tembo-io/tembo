name: CoreDB prerelease workflow

# On push to release/VERSION branch:
# - Publish images with tag VERSION-rc
# - For each crate, if the version is already published, skip
#   - Publish crates with -rc suffix appended, yanking if already exists
# - If there is a GitHub pre-release for this version, delete it
# - Create prerelease on GitHub
# - Prerelease should include the auto release notes and the version of each component
#
# On manually performed release promotion:
# - Retag images
# - Publish each crate with the version in Cargo.toml

on:
  push:
    branches:
      - release/**
      # TODO: remove before merge
      - cor-175/**

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.parse_version.outputs.version }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Parse version from branch name
        id: parse_version
        uses: ./.github/actions/parse-version-from-branch-name
        with:
          # TODO: remove before merge
          branch_prefix: 'cor-175/'
          # branch_prefix: 'release/'

  build_and_push_images:
    name: Build and push images
    runs-on: ubuntu-latest
    needs:
      - version
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: coredb-operator
            path: ./coredb-operator
          - name: postgres
            path: ./postgres
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Build and upload image
        uses: ./.github/actions/build-and-push-to-quay
        with:
          image_name: ${{ matrix.name }}
          docker_directory: ${{ matrix.path }}
          # Tagged as version with '-rc' suffix to indicate release candidate
          tags: ${{ needs.version.outputs.version }}-rc
          quay_user: ${{ secrets.QUAY_USER }}
          quay_password: ${{ secrets.QUAY_PASSWORD }}

  publish_crates:
    name: cargo publish pre-releases
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - path: ./coredb-cli
          - path: ./coredb-operator
          - path: ./crates/pgmq
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Build and upload image
        uses: ./.github/actions/publish-crate-prerelease
        with:
          working-directory: ${{ matrix.path }}
          cargo_registry_token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
