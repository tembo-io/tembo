name: 'Parse version from branch'
description: 'Given a branch like release/X.Y.Z, then parse and validate the version'
inputs:
  branch_prefix:
    description: 'The prefix of the branch to remove before parsing the version'
    required: false
    default: "release/"
  semantic_version_regex:
    description: 'The regex string for validating the version'
    required: false
    default: "^((([0-9]+)\\.([0-9]+)\\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?)(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?)$"
outputs:
  version:
    description: 'The parsed semantic version from the branch name'
    value: ${{ steps.validate.outputs.version }}
runs:
  using: "composite"
  steps:
    - name: Get current branch name
      shell: bash
      id: get_branch
      run: |
        BRANCH=$(git rev-parse --abbrev-ref HEAD)
        echo "branch=${BRANCH}" >> $GITHUB_OUTPUT
    - name: Validate and parse semantic version
      shell: python
      id: validate
      run: |
        import os
        import re
        regex = '${{ inputs.semantic_version_regex }}'
        branch = "${{ steps.get_branch.outputs.branch }}"
        version = branch.replace("${{ inputs.branch_prefix }}", "").strip()
        if re.match(regex, version):
            print(f"Valid semantic version: {version}")
            os.environ["GITHUB_OUTPUT"] = f"version={version}"
        else:
            print(f"Invalid semantic version: {version}")
            exit(1)
