name: 'Generate and Deploy Documentation'
description: 'Generate and deploy documentation files.'
inputs:
  repository:
    description: 'GitHub repository to work with for documentation generation.'
    required: true
  website_repo:
    description: 'Website repository to update with documentation.'
    required: true
  ssh_key:
    description: 'SSH key for repository access.'
    required: true
  generation_branch:
    description: 'Branch to checkout for documentation generation.'
    required: true
  update_branch:
    description: 'Branch to update with generated documentation.'
    required: true

on:
  push:
    paths:
      - 'tembo-cli/**'
    branches:
      - main
  pull_request:
    paths:
      - 'tembo-cli/**'
    branches:
      - main
      - develop
      - feature/*

runs:
  using: "composite"
  steps:
    - name: Check out the generation repo
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        ssh-key: ${{ inputs.ssh_key }}
        ref: ${{ inputs.generation_branch }}
        path: 'generation-repo'

    - name: Generate Documentation
      run: |
        cd generation-repo/tembo-cli
        pwd
        ls -lah
        cargo run -- --markdown-help > ../command-reference.md
      shell: bash

    - name: Check if documentation has changed
      id: doc_check
      run: |
        if diff -q generation-repo/docs/old-command-reference.md generation-repo/docs/command-reference.md > /dev/null; then
          echo "Documentation has not changed."
          echo "skip_commit=1" >> $GITHUB_ENV
        else
          echo "Documentation has changed."
          cp generation-repo/docs/command-reference.md generation-repo/docs/old-command-reference.md
          echo "skip_commit=0" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Check out the website repo
      if: env.skip_commit == '0'
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.website_repo }}
        ssh-key: ${{ inputs.ssh_key }}
        ref: main
        path: 'website-repo'

    - name: Copy documentation to website repository
      if: env.skip_commit == '0'
      run: |
        mkdir -p website-repo/src/content/docs/development/cli/
        cp generation-repo/docs/command-reference.md website-repo/src/content/docs/development/cli/
      shell: bash

    - name: Commit and push documentation to website repository
      if: env.skip_commit == '0'
      run: |
        cd website-repo
        git config user.name "coredb-service-user"
        git config user.email "admin@github.com"
        git add src/content/docs/development/cli/command-reference.md
        git checkout -b ${{ inputs.update_branch }}
        git commit -m "Update command reference documentation"
        git push origin ${{ inputs.update_branch }}
      shell: bash
