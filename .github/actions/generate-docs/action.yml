name: 'Generate and Deploy Documentation'
description: 'Generate and deploy documentation files.'
inputs:
  repository:
    description: 'GitHub repository to work with.'
    required: true
  ssh_key:
    description: 'SSH key for the repository access.'
    required: true
  branch:
    description: 'Branch to checkout and update.'
    required: true
on:
  push:
    paths:
      - 'tembo-cli/**'
    branches:
      - main
  pull_request:
    paths:
      - 'tembo-cli/**'
    branches:
      - main
      - develop
      - feature/*

runs:
  using: "composite"
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.SERVICE_USER_GITHUB_SSH_KEY }}
          clone-into: ${{ inputs.clone_into }}
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Generate Documentation
        run: |
          cd tembo-cli
          cargo run -- --markdown-help > command-reference.md

      - name: Push Documentation to Website Repository
        run: |
          set -xe
          cd ${{ inputs.clone_into }}
          git config --global user.name "coredb-service-user"
          git config --global user.email "admin+github@coredb.io"
          git fetch origin ${{ inputs.branch }} && git checkout ${{ inputs.branch }} || git checkout -b ${{ inputs.branch }}

          # Ensure the target directory exists in the desired branch
          git fetch
          git checkout docs-updates
          mkdir -p src/content/docs/development/cli

          # Copy the documentation over
          cp ../command-reference.md src/content/docs/development/cli

          # Add, commit, and push changes
          git add src/content/docs/development/cli/command-reference.md
          git commit -m "Update command reference documentation"
          git push