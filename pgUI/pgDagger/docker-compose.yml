version: "3.5"
services:
  rest:
    image: postgrest/postgrest:v10.0.0
    restart: unless-stopped
    ports:
      - 3001:3000
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@timescaledb:5432/postgres
      PGRST_DB_SCHEMA: prom_data
      PGRST_DB_ANON_ROLE: postgres
    depends_on:
      - timescaledb

  timescaledb:
    image: timescale/timescaledb-ha:pg14-latest
    restart: on-failure
    ports:
      - 5432:5432/tcp
    volumes:
      - timescaledb-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust

  metrics_exporter:
    restart: always
    image: quay.io/prometheuscommunity/postgres-exporter:v0.11.1
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: postgresql://postgres:postgres@arbitrary_postgres:5433/postgres?sslmode=disable

  prometheus:
    image: prom/prometheus:v2.42.0
    restart: on-failure
    depends_on:
     - promscale
    ports:
      - 9090:9090/tcp
    volumes:
      - ${PWD}/prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml

  promscale:
    image: timescale/promscale:0.17.0
    restart: on-failure
    ports:
      - 9201:9201/tcp
      - 9202:9202/tcp
    depends_on:
      - timescaledb
    environment:
      PROMSCALE_DB_URI: postgres://postgres:postgres@timescaledb:5432/postgres?sslmode=allow

  arbitrary_postgres:
    restart: always
    image: postgres:15.2
    ports:
      - 5433:5433
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command: -p 5433

volumes:
  timescaledb-data:
